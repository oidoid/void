Fix import map swap.
Think about Deno vs NPM boilerplate and customization and support. There's not that much in NPM.
Explore making the index.html the input instead of build script arguments. This gives me a lot more flexibility to sprinkle in project-specific HTML.
Explore the build script converting image to array so it doesn't need to be loaded async.
  const file = await Deno.open('atlas.png');
  const buffer = await readAll(file);
  Deno.close(file.rid);
  const uint8Array = new Uint8Array(buffer);
  const jsonData = { image: Array.from(uint8Array) };
Rework captial S and drop pixel on 5?
Load a level with collision detection.
  figure out workflow for tmnt overworld + level loading + collision system, don't even need sprites
I want a grid-based ECS answer for 5md; grid
A thin loop + context.
  https://alex.miller.garden/notes/gridtoy
  https://github.com/rxi/kit
  Think about `await RAF` or generator. What are the actual performance costs (including latency)?
  If I didn't need callbacks, or maybe even if I do, creating a base void Context object has a lot of appeal over subclassing.
    https://github.com/rxi/kit/blob/master/demo/main.c
A giant Tile 2D array where screen position is inferred from array position. This is how sprites would come from most level editors--they have no concept of stretching (but maybe stretching is still useful for UI). If I limit the number of possible CelIDs possible for background tiles, I could put them in nibbles and really pack it tight maybe. Maybe the first couple bytes specify the region so you don't have to fill the entire screen.
Implement autotile/automap.
Implement 9-patch https://en.wikipedia.org/wiki/9-slice_scaling. Is this a single sprite with 9 areas or 9 sprites? I think the former sounds simpler but will probably still require a shader transform.
Add UI components like buttons and forms.
Review ~/tmp/heap, ~/tmp/set interfaces, sort-map, and how they differ from Deno std https://deno.land/std.
How can I make apps offline / local-first?
  Make it installable; https://web.dev/codelab-make-installable/ https://web.dev/learn/pwa/ https://news.ycombinator.com/item?id=35635430
Copy "Spooky dungeon" from niedzielski/practice/AStar.test.ts? This could be used with the static collision LUT for plotting routes.
Review solitaire.text.
Consolidate root to-dos.
Sponsorship setup.
